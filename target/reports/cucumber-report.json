[{"line":1,"elements":[{"start_timestamp":"2022-01-13T14:11:20.986Z","line":11,"name":"Create a resource successfully","description":"","id":"creating-a-resource;create-a-resource-successfully;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":594242200,"status":"passed"},"line":4,"name":"a valid data 'foo' 'bar' 1","match":{"arguments":[{"val":"'foo'","offset":13},{"val":"'bar'","offset":19},{"val":"1","offset":25}],"location":"steps.CreateAResource.a_valid_data(java.lang.String,java.lang.String,int)"},"keyword":"Given "},{"result":{"duration":2123961900,"status":"passed"},"line":5,"name":"do post in the endpoint","match":{"location":"steps.CreateAResource.do_post_in_the_endpoint()"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected:<201> but was:<403>\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat steps.CreateAResource.is_returned_status_code(CreateAResource.java:41)\r\n\tat ✽.is returned status code 201(file:///C:/Projetos/desafio_api_jsonplaceholder/src/test/resources/features/creating_a_resource.feature:6)\r\n","duration":7139400,"status":"failed"},"line":6,"name":"is returned status code 201","match":{"arguments":[{"val":"201","offset":24}],"location":"steps.CreateAResource.is_returned_status_code(int)"},"keyword":"Then "},{"result":{"status":"skipped"},"line":7,"name":"the data 'foo' 'bar' '1'","match":{"arguments":[{"val":"'foo'","offset":9},{"val":"'bar'","offset":15},{"val":"'1'","offset":21}],"location":"steps.CreateAResource.the_data(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"And "}]}],"name":"Creating a resource","description":"","id":"creating-a-resource","keyword":"Feature","uri":"file:src/test/resources/features/creating_a_resource.feature","tags":[]},{"line":1,"elements":[{"start_timestamp":"2022-01-13T14:11:23.766Z","line":3,"name":"Delete a resource existing sucessfull","description":"","id":"delete-a-resource-existing;delete-a-resource-existing-sucessfull","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":379400,"status":"passed"},"line":4,"name":"a valid id 1","match":{"arguments":[{"val":"1","offset":11}],"location":"steps.DeleteAResource.a_valid_id(int)"},"keyword":"Given "},{"result":{"duration":177178000,"status":"passed"},"line":5,"name":"do delete in the endpoint","match":{"location":"steps.DeleteAResource.do_delete_in_the_endpoint()"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected:<200> but was:<403>\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat steps.DeleteAResource.status_code_returned(DeleteAResource.java:36)\r\n\tat ✽.status code returned 200(file:///C:/Projetos/desafio_api_jsonplaceholder/src/test/resources/features/deleting_a_resource.feature:6)\r\n","status":"failed"},"line":6,"name":"status code returned 200","match":{"arguments":[{"val":"200","offset":21}],"location":"steps.DeleteAResource.status_code_returned(int)"},"keyword":"Then "}]}],"name":"Delete a resource existing","description":"","id":"delete-a-resource-existing","keyword":"Feature","uri":"file:src/test/resources/features/deleting_a_resource.feature","tags":[]},{"line":1,"elements":[{"start_timestamp":"2022-01-13T14:11:23.957Z","line":11,"name":"get resource by valid id","description":"","id":"get-a-resource-by-id;get-resource-by-valid-id;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":999400,"status":"passed"},"line":4,"name":"a user be a endpoint","match":{"location":"steps.GetAresourceById.a_user_be_a_endpoint()"},"keyword":"Given "},{"result":{"duration":23371500,"status":"passed"},"line":5,"name":"do get with a id '1'","match":{"arguments":[{"val":"'1'","offset":17}],"location":"steps.GetAresourceById.do_get_with_a_id(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected:<200> but was:<403>\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat steps.GetAresourceById.status_code_returned_is(GetAresourceById.java:33)\r\n\tat ✽.status code returned is 200(file:///C:/Projetos/desafio_api_jsonplaceholder/src/test/resources/features/get_resource_by_id.feature:6)\r\n","status":"failed"},"line":6,"name":"status code returned is 200","match":{"arguments":[{"val":"200","offset":24}],"location":"steps.GetAresourceById.status_code_returned_is(int)"},"keyword":"Then "},{"result":{"status":"skipped"},"line":7,"name":"it shows a body of the requested resource with equal id '1'","match":{"arguments":[{"val":"'1'","offset":56}],"location":"steps.GetAresourceById.it_shows_a_body_of_the_requested_resource(java.lang.String)"},"keyword":"And "}]},{"start_timestamp":"2022-01-13T14:11:23.994Z","line":21,"name":"get resource by invalid id","description":"","id":"get-a-resource-by-id;get-resource-by-invalid-id;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":15,"name":"a user be a endpoint","match":{"location":"steps.GetAresourceById.a_user_be_a_endpoint()"},"keyword":"Given "},{"result":{"duration":20112700,"status":"passed"},"line":16,"name":"do get with a id '110'","match":{"arguments":[{"val":"'110'","offset":17}],"location":"steps.GetAresourceById.do_get_with_a_id(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected:<404> but was:<403>\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat steps.GetAresourceById.status_code_returned_is(GetAresourceById.java:33)\r\n\tat ✽.status code returned is 404(file:///C:/Projetos/desafio_api_jsonplaceholder/src/test/resources/features/get_resource_by_id.feature:17)\r\n","duration":999700,"status":"failed"},"line":17,"name":"status code returned is 404","match":{"arguments":[{"val":"404","offset":24}],"location":"steps.GetAresourceById.status_code_returned_is(int)"},"keyword":"Then "}]}],"name":"get a resource by id","description":"","id":"get-a-resource-by-id","keyword":"Feature","uri":"file:src/test/resources/features/get_resource_by_id.feature","tags":[]},{"line":1,"elements":[{"start_timestamp":"2022-01-13T14:11:24.027Z","line":3,"name":"listing all resources","description":"","id":"listing-all-resources-registered;listing-all-resources","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1118100,"status":"passed"},"line":4,"name":"user be a endpoint","match":{"location":"steps.ListingAllResources.user_be_a_endpoint()"},"keyword":"Given "},{"result":{"duration":14082600,"status":"passed"},"line":5,"name":"do get","match":{"location":"steps.ListingAllResources.do_get()"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected:<200> but was:<403>\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat steps.ListingAllResources.status_code_is(ListingAllResources.java:32)\r\n\tat ✽.status code is 200(file:///C:/Projetos/desafio_api_jsonplaceholder/src/test/resources/features/listing_all_resources.feature:6)\r\n","status":"failed"},"line":6,"name":"status code is 200","match":{"arguments":[{"val":"200","offset":15}],"location":"steps.ListingAllResources.status_code_is(int)"},"keyword":"Then "},{"result":{"status":"skipped"},"line":7,"name":"display a list of resources greater than or equal to 1","match":{"arguments":[{"val":"1","offset":53}],"location":"steps.ListingAllResources.display_a_list_of_resources_greater_than_or_equal_to(int)"},"keyword":"And "}]}],"name":"listing all resources registered","description":"","id":"listing-all-resources-registered","keyword":"Feature","uri":"file:src/test/resources/features/listing_all_resources.feature","tags":[]},{"line":1,"elements":[{"start_timestamp":"2022-01-13T14:11:24.066Z","line":11,"name":"Patching a resource existing sucessfull","description":"","id":"patching-a-resource-existing;patching-a-resource-existing-sucessfull;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":4,"name":"a valid data of user existing 'cheese'","match":{"arguments":[{"val":"'cheese'","offset":30}],"location":"steps.PatchAResource.a_valid_data_of_user_existing(java.lang.String)"},"keyword":"Given "},{"result":{"duration":34391100,"status":"passed"},"line":5,"name":"do patch in the endpoint in a register with id '1'","match":{"arguments":[{"val":"'1'","offset":47}],"location":"steps.PatchAResource.do_patch_in_the_endpoint_in_a_register_with_id(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected:<200> but was:<403>\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat steps.PatchAResource.return_a_status_code(PatchAResource.java:39)\r\n\tat ✽.return a status code 200(file:///C:/Projetos/desafio_api_jsonplaceholder/src/test/resources/features/patching_a_resource.feature:6)\r\n","status":"failed"},"line":6,"name":"return a status code 200","match":{"arguments":[{"val":"200","offset":21}],"location":"steps.PatchAResource.return_a_status_code(int)"},"keyword":"Then "},{"result":{"status":"skipped"},"line":7,"name":"the data is update 'cheese'","match":{"arguments":[{"val":"'cheese'","offset":19}],"location":"steps.PatchAResource.the_data_is_update(java.lang.String)"},"keyword":"And "}]}],"name":"Patching a resource existing","description":"","id":"patching-a-resource-existing","keyword":"Feature","uri":"file:src/test/resources/features/patching_a_resource.feature","tags":[]},{"line":1,"elements":[{"start_timestamp":"2022-01-13T14:11:24.112Z","line":11,"name":"updating a resource existing sucessfull","description":"","id":"updating-a-resource-existing;updating-a-resource-existing-sucessfull;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":641500,"status":"passed"},"line":4,"name":"a valid data of user existing 'foot' 'bart' 2","match":{"arguments":[{"val":"'foot'","offset":30},{"val":"'bart'","offset":37},{"val":"2","offset":44}],"location":"steps.UpdateAResource.a_valid_data_of_user_existing(java.lang.String,java.lang.String,int)"},"keyword":"Given "},{"result":{"duration":17874200,"status":"passed"},"line":5,"name":"do put in the endpoint in a register with id '1'","match":{"arguments":[{"val":"'1'","offset":45}],"location":"steps.UpdateAResource.do_put_in_the_endpoint_in_a_register_with_id(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected:<200> but was:<403>\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat steps.UpdateAResource.return_status_code(UpdateAResource.java:39)\r\n\tat ✽.return status code 200(file:///C:/Projetos/desafio_api_jsonplaceholder/src/test/resources/features/updating_a_resource.feature:6)\r\n","status":"failed"},"line":6,"name":"return status code 200","match":{"arguments":[{"val":"200","offset":19}],"location":"steps.UpdateAResource.return_status_code(int)"},"keyword":"Then "},{"result":{"status":"skipped"},"line":7,"name":"the data is update 'foot' 'bart' '2'","match":{"arguments":[{"val":"'foot'","offset":19},{"val":"'bart'","offset":26},{"val":"'2'","offset":33}],"location":"steps.UpdateAResource.the_data_is_update(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"And "}]}],"name":"Updating a resource existing","description":"","id":"updating-a-resource-existing","keyword":"Feature","uri":"file:src/test/resources/features/updating_a_resource.feature","tags":[]}]